import streamlit as st
from PIL import Image
from pyzbar.pyzbar import decode
import sqlite3
import numpy as np
import cv2

# SQLite setup
conn = sqlite3.connect('scanprods.db')
c = conn.cursor()

# Function to scan QR code from image
def scan_qr_code_from_image(img):
    img_gray = img.convert('L')
    decoded_objects = decode(img_gray)
    if decoded_objects:
        qr_data = decoded_objects[0].data.decode('utf-8')
        return qr_data
    else:
        return None

# Function to capture video from the camera and scan for QR codes
def scan_qr_code_from_camera():
    cap = cv2.VideoCapture(0)
    qr_data = None

    stframe = st.empty()
    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            break
        
        decoded_objects = decode(frame)
        for obj in decoded_objects:
            qr_data = obj.data.decode('utf-8')
            pts = obj.polygon
            if len(pts) > 4:
                hull = cv2.convexHull(np.array([pts], dtype=np.float32))
                hull = list(map(tuple, np.squeeze(hull)))
            else:
                hull = pts
            n = len(hull)
            for j in range(0, n):
                cv2.line(frame, hull[j], hull[(j + 1) % n], (0, 255, 0), 3)
        
        stframe.image(frame, channels="BGR")
        
        if qr_data:
            break
    
    cap.release()
    return qr_data

# Function to create the coupons table if it doesn't exist
def create_coupon_table():
    c.execute('''
        CREATE TABLE IF NOT EXISTS coupons (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            qr_data TEXT NOT NULL UNIQUE,
            coupon_code TEXT NOT NULL
        )
    ''')
    conn.commit()

# Function to generate a coupon code
def generate_coupon_code():
    return f'COUPON-{np.random.randint(100000, 999999)}'

# Function to store coupon in the database
def store_coupon(qr_data, coupon_code):
    try:
        c.execute('INSERT INTO coupons (qr_data, coupon_code) VALUES (?, ?)', (qr_data, coupon_code))
        conn.commit()
        return True
    except sqlite3.IntegrityError:
        return False

# Function to fetch coupon from the database
def fetch_coupon(qr_data):
    c.execute('SELECT coupon_code FROM coupons WHERE qr_data = ?', (qr_data,))
    coupon = c.fetchone()
    if coupon:
        return coupon[0]
    else:
        return None

def main():
    st.title('Redeem Coupon Code')
    st.text('Be awarded for being a smart shopper | Together , for better')
    create_coupon_table()

    tab1, tab2 = st.tabs(["Upload Image", "Scan with Camera"])

    with tab1:
        uploaded_file = st.file_uploader("Upload an image...", type=["jpg", "jpeg", "png"])
        
        if uploaded_file is not None:
            img = Image.open(uploaded_file)
            qr_data = scan_qr_code_from_image(img)
            if qr_data:
                if qr_data.startswith('PRODAPP:'):
                    coupon_code = fetch_coupon(qr_data)
                    if coupon_code:
                        st.success(f"Coupon Code: {coupon_code}")
                    else:
                        new_coupon_code = generate_coupon_code()
                        if store_coupon(qr_data, new_coupon_code):
                            st.success(f"Coupon Code: {new_coupon_code}")
                        else:
                            st.warning("This QR code has already been redeemed.")
                else:
                    st.warning("This QR code was not generated by PRODTRACK app.")
            else:
                st.warning("No QR code found in the uploaded image.")

    with tab2:
        st.subheader('Or Scan with Camera')
        if st.button('Start Camera Scan'):
            qr_data = scan_qr_code_from_camera()
            if qr_data:
                if qr_data.startswith('PRODAPP:'):
                    coupon_code = fetch_coupon(qr_data)
                    if coupon_code:
                        st.success(f"Coupon Code: {coupon_code}")
                    else:
                        new_coupon_code = generate_coupon_code()
                        if store_coupon(qr_data, new_coupon_code):
                            st.success(f"Coupon Code: {new_coupon_code}")
                        else:
                            st.warning("This QR code has already been redeemed.")
                else:
                    st.warning("This QR code was not generated by PRODTRACK app.")
            else:
                st.warning("No QR code found in the camera feed.")

if __name__ == '__main__':
    main()
